{"version":3,"sources":["node_modules/browser-pack/_prelude.js","sd-random.js","src/sd-random.js","standalone.index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","SilverDecisions","Random","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","Uniform","lower","upper","random","Exponential","lambda","Math","log","Normal","mean","std","sqrt","cos","PI","Pareto","minimum","alpha","pow","Weibull","beta","Triangular","b","m","c","LogNormal","exp","Gamma","_u","_u2","E","p","_x2","_u3","x","ainv","bbb","ccc","u1","u2","v","_x","z","Object","defineProperty","value","menuList","functionNameList","2","_sdRandom","keys","forEach","key","enumerable","get","./src/sd-random"],"mappings":"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","file":"sd-random.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}(g.SilverDecisions || (g.SilverDecisions = {})).Random = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Uniform = Uniform;\nexports.Exponential = Exponential;\nexports.Normal = Normal;\nexports.Pareto = Pareto;\nexports.Weibull = Weibull;\nexports.Triangular = Triangular;\nexports.LogNormal = LogNormal;\nexports.Gamma = Gamma;\nvar menuList = exports.menuList = [\"Uniform(0.0,1.0)\", \"Exponential(1.0)\", \"Normal(0.0,1.0)\", \"Pareto(1.0,1.0)\", \"Weibull(1.0,1.0)\", \"Triangular(0.0,1.0,0.5)\", \"LogNormal(0.0,1.0)\", \"Gamma(1.0,1.0)\"];\n\nvar functionNameList = exports.functionNameList = [\"Uniform\", \"Exponential\", \"Normal\", \"Pareto\", \"Weibull\", \"Triangular\", \"LogNormal\", \"Gamma\"];\n\nvar random = exports.random = Math.random;\n\nfunction Uniform(lower, upper) {\n    return random() * (upper - lower) + lower;\n}\n\nfunction Exponential(lambda) {\n    return -Math.log(Math.random()) / lambda;\n}\n\nfunction Normal(mean, std) {\n    if (mean == null) {\n        mean = 0.0;\n    }\n    if (std == null) {\n        std = 1.0;\n    }\n\n    var n = Math.sqrt(-2.0 * Math.log(1.0 - Math.random())) * Math.cos(2.0 * Math.PI * Math.random());\n    return n * std + mean;\n}\n\nfunction Pareto(minimum, alpha) {\n    return minimum / Math.pow(1 - Math.random(), 1.0 / alpha);\n}\n\nfunction Weibull(alpha, beta) {\n    return alpha * Math.pow(-Math.log(1.0 - random()), 1.0 / beta);\n}\n\nfunction Triangular(a, b, m) {\n    var c = (m - a) / (b - a),\n        u = random();\n    if (u <= c) {\n        return a + Math.sqrt(u * (b - a) * (m - a));\n    } else {\n        return b - Math.sqrt((1 - u) * (b - a) * (b - m));\n    }\n}\n\nfunction LogNormal(mean, std) {\n    return Math.exp(Normal(mean, std));\n}\n\nfunction Gamma(alpha, beta) {\n    if (alpha > 1.0) {\n        var ainv = Math.sqrt(2.0 * alpha - 1.0),\n            bbb = alpha - Math.log(4.0),\n            ccc = alpha + ainv;\n\n        while (true) {\n            // eslint-disable-line no-constant-condition\n            var u1 = random();\n\n            if (u1 < 1e-7 || u > 0.9999999) {\n                continue;\n            }\n            var u2 = 1.0 - random(),\n                v = Math.log(u1 / (1.0 - u1)) / ainv,\n                _x = alpha * Math.exp(v),\n                z = u1 * u1 * u2,\n                r = bbb + ccc * v - _x;\n            if (r + Math.log(4.5) - 3.5 * z >= 0.0 || r >= Math.log(z)) {\n                return _x * beta;\n            }\n        }\n    } else if (alpha == 1.0) {\n        var _u = random();\n        while (_u <= 1e-7) {\n            _u = random();\n        }\n        return -Math.log(_u) * beta;\n    } else {\n        while (true) {\n            var _u2 = random(),\n                b = (Math.E + alpha) / Math.E,\n                p = b * _u2,\n                _x2 = 0;\n            if (p <= 1.0) {\n                _x2 = Math.pow(p, 1.0 / alpha);\n            } else {\n                _x2 = -Math.log((b - p) / alpha);\n            }\n            var _u3 = random();\n\n            if (p > 1.0) {\n                if (_u3 <= Math.pow(_x2, alpha - 1.0)) {\n                    break;\n                }\n            } else if (_u3 <= Math.exp(-_x2)) {\n                break;\n            }\n        }\n        return x * beta;\n    }\n}\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _sdRandom = require('./src/sd-random');\n\nObject.keys(_sdRandom).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _sdRandom[key];\n    }\n  });\n});\n\n},{\"./src/sd-random\":1}]},{},[2])(2)\n});\n\n","export const menuList = [\"Uniform(0.0,1.0)\", \"Exponential(1.0)\",\r\n                         \"Normal(0.0,1.0)\", \"Pareto(1.0,1.0)\",\r\n                         \"Weibull(1.0,1.0)\", \"Triangular(0.0,1.0,0.5)\",\r\n                         \"LogNormal(0.0,1.0)\", \"Gamma(1.0,1.0)\"];\r\n\r\nexport const functionNameList = [\"Uniform\", \"Exponential\",\r\n                                 \"Normal\", \"Pareto\",\r\n                                 \"Weibull\", \"Triangular\",\r\n                                 \"LogNormal\", \"Gamma\"];\r\n\r\nexport const random = Math.random;\r\n\r\nexport function Uniform(lower, upper) {\r\n    return random() * (upper - lower) + lower;\r\n}\r\n\r\nexport function Exponential(lambda) {\r\n    return -Math.log(Math.random()) / lambda;\r\n}\r\n\r\nexport function Normal(mean, std) {\r\n    if (mean == null) {\r\n        mean = 0.0;\r\n    }\r\n    if (std == null) {\r\n        std = 1.0;\r\n    }\r\n\r\n    let n = Math.sqrt(-2.0 * Math.log(1.0 - Math.random())) * Math.cos(2.0 * Math.PI * Math.random());\r\n    return n * std + mean;\r\n}\r\n\r\nexport function Pareto(minimum, alpha) {\r\n    return minimum / Math.pow((1 - Math.random()), 1.0 / alpha);\r\n}\r\n\r\nexport function Weibull(alpha, beta) {\r\n    return alpha * Math.pow(-Math.log(1.0 - random()), 1.0 / beta);\r\n}\r\n\r\nexport function Triangular(a, b, m) {\r\n    var c = (m - a) / (b - a),\r\n        u = random();\r\n    if (u <= c) {\r\n        return a + Math.sqrt(u * (b - a) * (m - a));\r\n    } else {\r\n        return b - Math.sqrt((1 - u) * (b - a) * (b - m));\r\n    }\r\n}\r\n\r\nexport function LogNormal(mean, std) {\r\n    return Math.exp(Normal(mean, std))\r\n}\r\n\r\nexport function Gamma(alpha, beta) {\r\n    if (alpha > 1.0) {\r\n        let ainv = Math.sqrt(2.0 * alpha - 1.0),\r\n            bbb = alpha - Math.log(4.0),\r\n            ccc = alpha + ainv;\r\n\r\n        while (true) {  // eslint-disable-line no-constant-condition\r\n            let u1 = random();\r\n\r\n            if ((u1 < 1e-7) || (u > 0.9999999)) {\r\n                continue;\r\n            }\r\n            let u2 = 1.0 - random(),\r\n                v = Math.log(u1 / (1.0 - u1)) / ainv,\r\n                x = alpha * Math.exp(v),\r\n                z = u1 * u1 * u2,\r\n                r = bbb + ccc * v - x;\r\n            if ((r + Math.log(4.5) - 3.5 * z >= 0.0) || (r >= Math.log(z))) {\r\n                return x * beta;\r\n            }\r\n        }\r\n    } else if (alpha == 1.0) {\r\n        let u = random();\r\n        while (u <= 1e-7) {\r\n            u = random();\r\n        }\r\n        return -Math.log(u) * beta;\r\n    } else {\r\n        while (true) {\r\n            let u = random(),\r\n                b = (Math.E + alpha) / Math.E,\r\n                p = b * u,\r\n                x = 0;\r\n            if (p <= 1.0) {\r\n                x = Math.pow(p, 1.0 / alpha);\r\n            } else {\r\n                x = -Math.log((b - p) / alpha);\r\n            }\r\n            const u1 = random();\r\n\r\n            if (p > 1.0) {\r\n                if (u1 <= Math.pow(x, (alpha - 1.0))) {\r\n                    break;\r\n                }\r\n            } else if (u1 <= Math.exp(-x)) {\r\n                break;\r\n            }\r\n        }\r\n        return x * beta;\r\n    }\r\n\r\n}\r\n","export * from './src/sd-random';\n"]}